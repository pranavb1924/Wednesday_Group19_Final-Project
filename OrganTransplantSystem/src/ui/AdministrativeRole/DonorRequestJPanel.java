/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AdministrativeRole;
import DatabaseConn.DatabaseConnection;
import java.awt.CardLayout;
import java.sql.*;
import model.donor.DonorRegistrationRequest;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.HospitalManagement.Hospital;
import model.donor.*;
/**
 *
 * @author pranavb
 */
public class DonorRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DonorRequestJPanel
     */
    DatabaseConnection dbconnection = new DatabaseConnection();
    ArrayList<DonorRegistrationRequest> donorRequestDirectory = new ArrayList<DonorRegistrationRequest>();
    JPanel userProcessContainer;
    Donor donor = new Donor();
    Connection connection;
    public DonorRequestJPanel(JPanel userProcessContainer) {
        initComponents();
                this.userProcessContainer = userProcessContainer;
        this.connection = dbconnection.getConnection();
        this.fetchDonorRequests();
        this.populateHospitalTable();

    }
    
    public void fetchDonorRequests() {
    String query = "SELECT RequestID, FirstName, MiddleName, LastName, DateOfBirth, " +
                   "AddressLine1, City, RequestDate FROM DonorRegistrationRequests";

    try {
        PreparedStatement stmt = this.connection.prepareStatement(query);
        ResultSet rs = stmt.executeQuery();

        donorRequestDirectory.clear();

        while (rs.next()) {
            DonorRegistrationRequest request = new DonorRegistrationRequest();
            request.setFirstName(rs.getString("FirstName"));
            request.setMiddleName(rs.getString("MiddleName"));
            request.setLastName(rs.getString("LastName"));
            request.setDateOfBirth(rs.getString("DateOfBirth"));
            request.setAddress(rs.getString("AddressLine1"));
            request.setCity(rs.getString("City"));
            request.setRequestDate(rs.getString("RequestDate"));

            this.donorRequestDirectory.add(request);
        }

        rs.close();
        stmt.close();
    } catch (SQLException e) {
        e.printStackTrace();
        throw new RuntimeException("Error fetching donor registration requests: " + e.getMessage());
    }
}

    
     public void populateHospitalTable(){
                DefaultTableModel model = (DefaultTableModel) tblDonorRequests.getModel();
        
        model.setRowCount(0);
        
        for (DonorRegistrationRequest hospital  : this.donorRequestDirectory){
            Object[] row = new Object[5];
            row[0] = hospital;
            row[1] = hospital.getAddress();
            row[2] = hospital.getCity();

            
            model.addRow(row);
        }
    }
     
     
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonorRequests = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(1200, 830));
        setMinimumSize(new java.awt.Dimension(1200, 830));

        tblDonorRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Donor Name", "Donor Date of Birth", "Donor City"
            }
        ));
        jScrollPane1.setViewportView(tblDonorRequests);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jButton1)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(264, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblDonorRequests.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        DonorRegistrationRequest rq  = (DonorRegistrationRequest) tblDonorRequests.getValueAt(selectedRowIndex, 0);
        
        this.donor.setFirstName(rq.getFirstName());
        this.donor.setLastName(rq.getLastName());
        this.donor.setCity(rq.getCity());
        
        ManageDonorRequestJPanel manageDonorRequestJPanel = new ManageDonorRequestJPanel(userProcessContainer, this.donor);
        userProcessContainer.add("ManageDonorRequestJPanel", manageDonorRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDonorRequests;
    // End of variables declaration//GEN-END:variables
}
